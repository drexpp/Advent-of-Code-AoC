package days2017;

import java.util.HashMap;
import java.util.Map;


public class Day1 {
	public static void main(String[] args) {
		
		String test = "951484596541141557316984781494999179679767747627132447513171626424561779662873157761442952212296685573452311263445163233"
				+ "4931992113878384615946356666994229829477826233173336839784381232613268639597197771792285993193211389484665627437615848361845"
				+ "12984131635354116264899181952748224523953976485816295227945792555726121913344959454458829485471174415775278865324142733339789"
				+ "8789295962759983417788738895858199164574747732522491793665999514541826572255762778346692229823668846885657546912737459"
				+ "5946864895749851132621593435396398147159398461755451451962378532688837474214731899342321483475178595695839513348665638845455"
				+ "2769722562524415715913869946325551396638593398729938526424994348267935153555851552287223313383583669912941364344694725478258"
				+ "297498969517632881187394141593479818536194597976519254215932257653777455227477617957833273463216593642394215275314734"
				+ "914719726618923177918342664351954252667253233858814365351722938716621544226598956257753212248859258351363174782742336961425"
				+ "325381561575992352415514168782816173861148859478285339529151631429536819286498721812323861771638574344416879476255929929157"
				+ "9129841517426132687547796853961259545953181349333666265944982499563887717237772427726546784488158445553728925747477356723682"
				+ "9982654825474435937766729476455933465952323314658756826111625315518939418869683169128471126487291434896188825338697199443"
				+ "135247471737687874594876917124324262121991237873175554438724944399738239971473835185775232936799766516695646754445981758291"
				+ "547851448654145393217559841355425967211736486311259251598892274716484266836192513555124892344996832838588987751215695272519"
				+ "869174695143144349749645576151648657347618532174852364428349418111939987432468392239354768285193143593127626776677279"
				+ "8261563117954648576421741384823494187895272582575669685279986988357796138794326125852772995446355723211161523161886222"
				+ "5628535464884115634739986338479532467875571461876969478313357228889181729612564989718689462372995234748419835273914899623571964339272"
				+ "51798764362493965894995592683296651874787384247326643886774966828657393717626591578321174832222434128817871765347278152799"
				+ "425565633521152643686221411129463425496425385516719682884157452772141585743166647191938727971366274357874252166721759";
		
		Integer result = SumOfEqualDigits(test);
		
		if(Character.getNumericValue(test.charAt(0)) == Character.getNumericValue(test.charAt(test.length()-1))){
			result += Character.getNumericValue(test.charAt(0));
		}
		
		System.out.println(result);
		
	}
	
	public static Integer SumOfEqualDigits(String test){
		
		Integer result = 0;
		Integer test_length = test.length();
		Integer aux = 0;
		Map <Integer, Integer> map = new HashMap<Integer, Integer>();
		
		
		for(int i = 0; i < test_length;i++){
			if(i != 0){
				if(map.containsKey(Character.getNumericValue(test.charAt(i)))){
					if(aux == Character.getNumericValue(test.charAt(i))){
						Integer updateVal = map.get(Character.getNumericValue(test.charAt(i)));
						updateVal++;
						map.put(Character.getNumericValue(test.charAt(i)), updateVal);
						aux = Character.getNumericValue(test.charAt(i));
					}else{
						aux =  Character.getNumericValue(test.charAt(i));
					}
				}else{
					map.put(Character.getNumericValue(test.charAt(i)), 0);
					aux = Character.getNumericValue(test.charAt(i));
				}
			}else{
				map.put(Character.getNumericValue(test.charAt(i)), 0);
				aux = Character.getNumericValue(test.charAt(i));
			}
		}
		
		for(int i = 1; i < 10; i++){
			try{
				if(map.containsKey(i)){
					result += i * map.get(i);
				}
			}catch(Throwable e){
				
			}
		}
		
		return result;
		
	}
}

